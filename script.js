const apiKey = '84a5dd3c07c9749d17f2ff97f4156436'; //It is replace by your generate API-Key.

document.getElementById('searchBtn').addEventListener('click', getWeatherByCity);
document.getElementById('locationBtn').addEventListener('click', getWeatherByLocation);
document.getElementById('clearBtn').addEventListener('click', clearWeather);
document.getElementById('restartBtn').addEventListener('click', () => location.reload());

function getWeatherByCity() {
  const city = document.getElementById('cityInput').value.trim();
  if (city !== '') {
    const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;
    fetchWeatherData(url);
  } else {
    alert('Please enter a city name.');
  }
}

function getWeatherByLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      function (position) {
        const lat = position.coords.latitude;
        const lon = position.coords.longitude;
        const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;
        fetchWeatherData(url);
      },
      function () {
        alert('Location access denied or unavailable.');
      }
    );
  } else {
    alert('Geolocation not supported by your browser.');
  }
}

function fetchWeatherData(url) {
  fetch(url)
    .then(res => res.json())
    .then(data => {
      const weatherDisplay = document.getElementById('weatherDisplay');
      const condition = data.weather[0].main;
      const temp = data.main.temp;

      // Generate advice----------
      let englishAdvice = '';
      let hindiAdvice = '';

      switch (condition) {
        case 'Clear':
          englishAdvice = 'тШАя╕П ItтАЩs a sunny day!';
          hindiAdvice = 'тШАя╕П рдЖрдЬ рдзреВрдк рдирд┐рдХрд▓реА рд╣реИ!';
          break;
        case 'Rain':
          englishAdvice = 'ЁЯМзя╕П Rainy weather! Carry an umbrella.';
          hindiAdvice = 'ЁЯМзя╕П рдмрд╛рд░рд┐рд╢ рд╣реЛ рд░рд╣реА рд╣реИ! рдЫрд╛рддрд╛ рд╕рд╛рде рд░рдЦреЗрдВред';
          break;
        case 'Clouds':
          englishAdvice = 'тШБя╕П Cloudy skies.';
          hindiAdvice = 'тШБя╕П рдмрд╛рджрд▓ рдЫрд╛рдП рд╣реБрдП рд╣реИрдВред';
          break;
        case 'Snow':
          englishAdvice = 'тЭДя╕П Snowfall expected.';
          hindiAdvice = 'тЭДя╕П рдмрд░реНрдлрдмрд╛рд░реА рд╣реЛ рд╕рдХрддреА рд╣реИред';
          break;
        case 'Thunderstorm':
          englishAdvice = 'тЫИя╕П Thunderstorm alert. Stay indoors.';
          hindiAdvice = 'тЫИя╕П рддреВрдлрд╝рд╛рди рдЖ рд╕рдХрддрд╛ рд╣реИред рдШрд░ рдкрд░ рд░рд╣реЗрдВред';
          break;
        case 'Mist':
        case 'Fog':
          englishAdvice = 'ЁЯМля╕П Low visibility due to mist.';
          hindiAdvice = 'ЁЯМля╕П рдзреБрдВрдз рдХреЗ рдХрд╛рд░рдг рджреГрд╢реНрдпрддрд╛ рдХрдо рд╣реИред';
          break;
        default:
          englishAdvice = 'ЁЯМН Stay prepared!';
          hindiAdvice = 'ЁЯМН рддреИрдпрд╛рд░ рд░рд╣реЗрдВ!';
      }

      if (temp < 10) {
        englishAdvice += ' Very cold! Stay warm and limit outdoor activity.';
        hindiAdvice += ' рдмрд╣реБрдд рдардВрдб рд╣реИ! рдЧрд░реНрдо рд░рд╣реЗрдВ рдФрд░ рдмрд╛рд╣рд░ рдХрдо рдЬрд╛рдПрдВред';
      } else if (temp < 15) {
        englishAdvice += ' Cool weather. Dress warmly.';
        hindiAdvice += ' рдардВрдбрд╛ рдореМрд╕рдо рд╣реИред рдЧрд░реНрдо рдХрдкрдбрд╝реЗ рдкрд╣рдиреЗрдВред';
      } else if (temp < 25) {
        englishAdvice += ' Pleasant weather. Ideal for outdoor tasks.';
        hindiAdvice += ' рд╕реБрд╣рд╛рд╡рдирд╛ рдореМрд╕рдоред рдмрд╛рд╣рд░ рдЬрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рдЙрдкрдпреБрдХреНрдд рд╣реИред';
      } else if (temp < 35) {
        englishAdvice += ' Warm weather. Stay hydrated.';
        hindiAdvice += ' рдЧрд░реНрдореА рд╣реИред рдкрд╛рдиреА рдкреАрддреЗ рд░рд╣реЗрдВред';
      } else {
        englishAdvice += ' Very hot! Avoid going out during peak hours.';
        hindiAdvice += ' рдмрд╣реБрдд рдЧрд░реНрдореА рд╣реИ! рджреЛрдкрд╣рд░ рдореЗрдВ рдмрд╛рд╣рд░ рдЬрд╛рдиреЗ рд╕реЗ рдмрдЪреЗрдВред';
      }

      weatherDisplay.innerHTML = `
        <h2>${data.name}, ${data.sys.country}</h2>
        <p><strong>Temperature:</strong> ${temp} ┬░C</p>
        <p><strong>Weather:</strong> ${condition}</p>
        <p><strong>Humidity:</strong> ${data.main.humidity}%</p>
        <p><strong>Wind Speed:</strong> ${data.wind.speed} m/s</p>
        <div style="margin-top:10px; padding:10px; background-color:#f0f8ff; border-left:4px solid #2196F3;">
          <strong>Advice:</strong> ${englishAdvice}
          <br><span style="color: gray; font-size: 14px;">${hindiAdvice}</span>
        </div>
      `;
    })
    .catch(() => {
      document.getElementById('weatherDisplay').innerHTML = `<p>Error getting weather data.</p>`;
    });
}

function clearWeather() {
  document.getElementById('cityInput').value = '';
  document.getElementById('weatherDisplay').innerHTML = '';
}
